ARG WITH_DB=true

FROM mongo:4.4 AS base

ENV CVE_BASE=/opt/cve
ENV PATH=${PATH}:${CVE_BASE}/bin


RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        git \
        python3 \
        python3-pip \
        python3-lxml \
        python3-dev \
        gcc \
        redis-server && \
    mv /usr/local/bin/docker-entrypoint.sh /usr/local/bin/mongo-entrypoint.sh && \
    apt-get autoremove -y python3-dev gcc && \
    rm -rf /var/lib/apt/lists/*

ARG REPO=cve-search/cve-search
ARG BRANCH=master

RUN git clone -b ${BRANCH} --single-branch --depth=1 https://github.com/${REPO}.git ${CVE_BASE} && \
    pip3 install -r ${CVE_BASE}/requirements.txt

ARG CVE_START_YEAR=2002
ARG WEBSERVER_PORT=5000

RUN cd ${CVE_BASE} && \
    sed \
        -e 's/Password: .*/Password:/' \
        -e 's/Host: 127\.0\.0\.1/Host: 0.0.0.0/' \
        -e "s/Port: 5000/Port: ${WEBSERVER_PORT}/" \
        -e 's/Debug: .*/Debug: False/' \
        -e 's/SSL: .*/SSL: True/' \
        -e 's/Certificate: .*/Certificate: ssl\/cve-search.crt/' \
        -e 's/Key: .*/Key: ssl\/cve-search.key/' \
        -e "s/StartYear: .*/StartYear: ${CVE_START_YEAR}/" \
        etc/configuration.ini.sample \
        > etc/configuration.ini && \
    cp etc/auth.txt.sample etc/auth.txt

ADD docker-entrypoint.sh /usr/local/bin/cvedb
RUN chmod +x /usr/local/bin/cvedb

EXPOSE ${WEBSERVER_PORT}
ENTRYPOINT ["cvedb"]

# Conditional Docker build
# See: https://stackoverflow.com/a/60820156
FROM base AS with-db-true
ENV WITH_DB=true
CMD ["-c", "-u", "-w"]

FROM base AS with-db-false
ENV WITH_DB=false
CMD ["-c", "-i", "-w"]

FROM with-db-${WITH_DB} AS final
RUN echo "Using ENV WITH_DB=${WITH_DB}"
RUN whoami
RUN if [ "${WITH_DB}" = "true" ] ; then cvedb -i && echo "Retaining mongodb data..." && cp -r /data /persist ; fi
