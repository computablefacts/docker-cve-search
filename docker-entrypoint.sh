#!/bin/bash
# Small script to control container behavior.

cd $CVE_BASE

function show_help {
  printf "Used to launch CVE database.\n \
          \t-h|--help: this help menu\n\
          \t-c|--certificate: generate HTTPS certificate\n\
          \t-i|--initialize: initialize database for the first time\n\
          \t-u|--update: update database\n\
          \t-r|--repopulate: repopulate database\n\
          \t-w|--web: starting web app\n"
}

function log {
  echo "==================== $1 ===================="
}

function generate_cert {
  log "Generate certificate"
  mkdir -p ${CVE_BASE}/ssl
  openssl req -new -newkey rsa:4096 -days 3650 -nodes -x509 -subj "/C=NA/ST=CVE_SEARCH/L=CVE_SEARCH/O=CVE_SEARCH/CN=CVE_SEARCH" -keyout ${CVE_BASE}/ssl/cve-search.key -out ${CVE_BASE}/ssl/cve-search.crt
}

function start_mongodb {
  if ! pidof -x "mongod" >/dev/null; then
    log "Starting mongodb server"
    if [ -d /persist ] && [ ! -f /data/db/recovered.done ]; then
      log "Recovering persisted data"
      shopt -s dotglob
      cp -r /persist/* /data/
      touch /data/db/recovered.done
      rm -Rf /persist
    fi
    mongo-entrypoint.sh mongod --logpath /var/log/mongodb/mongod.log &
    sleep 5
  fi
}

function stop_mongodb {
  if pidof -x "mongod" >/dev/null; then
    log "Stopping mongodb server"
    kill $(pidof -x "mongod")
    sleep 5
  fi
}

function start_redis {
  if ! pidof -x "redis-server" >/dev/null; then
    log "Starting redis server"
    /etc/init.d/redis-server start
    sleep 2
  fi
}

function stop_redis {
  if pidof -x "redis-server" >/dev/null; then
    log "Stopping redis server"
    /etc/init.d/redis-server stop
    sleep 5
  fi
}

function populate_database {
  log "START - Populating database"
  log "./sbin/db_mgmt_cpe_dictionary -p"
  ./sbin/db_mgmt_cpe_dictionary.py -p
  log "./sbin/db_mgmt_json.py -p"
  ./sbin/db_mgmt_json.py -p
  log "db_updater -c"
  ./sbin/db_updater.py -c
  log "db_mgmt_ref"
  ./sbin/db_mgmt_ref.py
  log "END - Populating database"
}

function update_database {
  log "Updating database"
  ./sbin/db_updater.py -v
}

function repopulate_database {
  log "REPOPULATING database"
  ./sbin/db_updater.py -v -f
}

# Validate number of arguments
if [ $# -eq 0 ]
  then
    show_help
    exit 0
fi

# Parse arguments
while [[ $# -gt 0 ]]
do
  key="$1"
  case $key in
      -h|--help)
      show_help
      ;;
      -c|--certificate)
      generate_cert
      ;;
      -i|--initialize)
      start_mongodb
      start_redis
      populate_database
      stop_mongodb
      stop_redis
      ;;
      -u|--update)
      start_mongodb
      start_redis
      update_database
      ;;
      -r|--repopulate)
      start_mongodb
      start_redis
      repopulate_database
      ;;
      -w|--web)
      start_mongodb
      start_redis
      log "Starting web app"
      python3 ./web/index.py
      ;;
      *)
      show_help
      ;;
  esac
  shift
done

